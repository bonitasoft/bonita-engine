<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.bonitasoft.engine.test</groupId>
        <artifactId>bonita-integration-tests-as</artifactId>
        <version>7.4.4-SNAPSHOT</version>
    </parent>

    <artifactId>bonita-integration-wildfly10</artifactId>

    <name>Bonita - Integration Tests on WildFly 10</name>

    <properties>
        <wildfly.name>wildfly-10.1.0.Final</wildfly.name>
        <wildfly.web.port>7080</wildfly.web.port>
        <wildfly.web.port.https>7480</wildfly.web.port.https>
        <wildfly.management.web.port>9991</wildfly.management.web.port>
        <wildfly.ajp.port>8011</wildfly.ajp.port>
        <wildfly.url>http://download.jboss.org/wildfly/10.1.0.Final/wildfly-10.1.0.Final.zip</wildfly.url>
        <wildfly.zip.folder>${user.home}</wildfly.zip.folder>
        <wildfly.home>${project.build.directory}/${wildfly.name}</wildfly.home>

        <db.vendor>h2</db.vendor>
        <cargo.jvmargs>-Xms1024m -Xmx1024m -XX:MaxPermSize=256m -XX:+HeapDumpOnOutOfMemoryError</cargo.jvmargs>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.bonitasoft.engine.test</groupId>
            <artifactId>bonita-deploy-ear3</artifactId>
            <version>${project.version}</version>
            <type>ear</type>
        </dependency>
        <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>1.0b3</version>
            <exclusions>
                <exclusion>
                    <artifactId>ant</artifactId>
                    <groupId>ant</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.bonitasoft.engine.test</groupId>
            <artifactId>bonita-integration-tests-client</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>logback-classic</artifactId>
                    <groupId>ch.qos.logback</groupId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <org.bonitasoft.engine.api-type>EJB3</org.bonitasoft.engine.api-type>
                        <java.naming.factory.url.pkgs>org.jboss.ejb.client.naming</java.naming.factory.url.pkgs>
                    </systemPropertyVariables>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${wildfly.home}/bin/client/jboss-client.jar</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <stripVersion>true</stripVersion>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>mysql</groupId>
                                    <artifactId>mysql-connector-java</artifactId>
                                    <outputDirectory>${project.build.directory}/driver</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.postgresql</groupId>
                                    <artifactId>postgresql</artifactId>
                                    <outputDirectory>${project.build.directory}/driver</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Wildfly AS installation</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <inherited>false</inherited>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <target>
                                <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask" classpathref="maven.runtime.classpath" />

                                <property name="wildfly.conf.dir" value="${wildfly.home}/standalone/configuration"/>
                                <property name="wildfly.deploy.dir" value="${wildfly.home}/standalone/deployments"/>

                                <!-- Download wildfly if needed -->
                                <available property="wildfly.present" file="${wildfly.zip.folder}/${wildfly.name}.zip" />
                                <if>
                                    <not>
                                        <isset property="wildfly.present" />
                                    </not>
                                    <then>
                                        <get src="${wildfly.url}" dest="${wildfly.zip.folder}/${wildfly.name}.zip" />
                                    </then>
                                </if>

                                <unzip dest="${project.build.directory}" src="${wildfly.zip.folder}/${wildfly.name}.zip" />

                                <copy todir="${wildfly.deploy.dir}">
                                    <fileset dir="src/main/resources/${db.vendor}">
                                        <include name="${db.vendor}-ds.xml" />
                                    </fileset>
                                </copy>
                                <copy todir="${wildfly.home}/modules/system/layers/base/sun/jdk/main/"
                                            file="${basedir}/src/main/resources/jdk/module.xml" />

                                <if>
                                    <not>
                                        <equals arg1="${db.vendor}" arg2="h2" />
                                    </not>
                                    <then>
                                        <!-- Update database configuration -->
                                        <property file="src/main/resources/${db.vendor}/database.properties" />

                                        <replace file="${wildfly.deploy.dir}/${db.vendor}-ds.xml" token="#database.ip#"
                                                 value="${database.ip}" />
                                        <replace file="${wildfly.deploy.dir}/${db.vendor}-ds.xml" token="#database.port#"
                                                 value="${database.port}" />
                                        <replace file="${wildfly.deploy.dir}/${db.vendor}-ds.xml" token="#database.user#"
                                                 value="${database.user}" />
                                        <replace file="${wildfly.deploy.dir}/${db.vendor}-ds.xml" token="#database.password#"
                                                 value="${database.password}" />
                                        <replace file="${wildfly.deploy.dir}/${db.vendor}-ds.xml" token="#database.name#"
                                                 value="${database.name}" />

                                        <mkdir dir="${wildfly.home}/modules/system/layers/base/org/postgresql/main/" />
                                        <copy todir="${wildfly.home}/modules/system/layers/base/org/postgresql/main/"
                                              file="${basedir}/src/main/resources/${db.vendor}/module.xml" />
                                        <copy todir="${wildfly.home}/modules/system/layers/base/org/postgresql/main/"
                                              file="${project.build.directory}/driver/postgresql.jar" />
                                        <replace file="${wildfly.conf.dir}/standalone.xml"
                                                 token="&lt;/drivers&gt;"
                                                 value="&lt;driver name=&quot;postgresql&quot; module=&quot;org.postgresql&quot;&gt;&lt;xa-datasource-class&gt;org.postgresql.xa.PGXADataSource&lt;/xa-datasource-class&gt;&lt;/driver&gt;&lt;/drivers&gt;" />
                                    </then>
                                </if>

                                <replace file="${wildfly.home}/bin/standalone.conf" token="-XX:MaxPermSize=256m"
                                         value="-XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError" />

                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <id>start-container</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-container</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipTests}</skip>
                    <container>
                        <containerId>wildfly10x</containerId>
                        <type>installed</type>
                        <home>${wildfly.home}</home>
                        <systemProperties>
                            <jboss.vfs.cache>org.jboss.virtual.plugins.cache.IterableTimedVFSCache</jboss.vfs.cache>
                            <jboss.vfs.cache.TimedPolicyCaching.lifetime>500</jboss.vfs.cache.TimedPolicyCaching.lifetime>
                            <sysprop.bonita.transaction.manager>java:jboss/TransactionManager</sysprop.bonita.transaction.manager>
                            <sysprop.bonita.userTransaction>java:jboss/UserTransaction</sysprop.bonita.userTransaction>
                            <sysprop.bonita.database.journal.datasource.name>java:jboss/datasources/bonitaDS</sysprop.bonita.database.journal.datasource.name>
                            <sysprop.bonita.businessdata.datasource.jndi>java:jboss/datasources/BusinessDataDS</sysprop.bonita.businessdata.datasource.jndi>
                            <sysprop.bonita.businessdata.notmanageddatasource.jndi>java:jboss/datasources/NotManagedBizDataDS</sysprop.bonita.businessdata.notmanageddatasource.jndi>
                            <sysprop.bonita.database.sequence.manager.datasource.name>jboss/datasources/bonitaSequenceManagerDS</sysprop.bonita.database.sequence.manager.datasource.name>
                            <sysprop.bonita.hibernate.transaction.jta_platform>org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform</sysprop.bonita.hibernate.transaction.jta_platform>
                            <sysprop.bonita.db.vendor>${db.vendor}</sysprop.bonita.db.vendor>
                            <sysprop.bonita.bdm.db.vendor>${db.vendor}</sysprop.bonita.bdm.db.vendor>
                            <jboss.server.log.threshold>WARN</jboss.server.log.threshold>

                            <jboss.http.port>${wildfly.web.port}</jboss.http.port>
                            <jboss.https.port>${wildfly.web.port.https}</jboss.https.port>
                            <jboss.management.http.port>${wildfly.management.web.port}</jboss.management.http.port>
                            <jboss.ajp.port>${wildfly.ajp.port}</jboss.ajp.port>
                        </systemProperties>
                        <timeout>360000</timeout>
                    </container>
                    <configuration>
                        <type>existing</type>
                        <home>${wildfly.home}/standalone</home>
                        <properties>
                            <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
                            <cargo.servlet.port>${wildfly.web.port}</cargo.servlet.port>
                            <cargo.jvmargs>${cargo.jvmargs}</cargo.jvmargs>
                            <cargo.jboss.management-http.port>${wildfly.management.web.port}</cargo.jboss.management-http.port>
                        </properties>
                    </configuration>
                    <deployables>
                        <deployable>
                            <groupId>org.bonitasoft.engine.test</groupId>
                            <artifactId>bonita-deploy-ear3</artifactId>
                            <type>ear</type>
                            <pingURL>http://localhost:${wildfly.web.port}/bonita-deploy-war/ping</pingURL>
                            <pingTimeout>600000</pingTimeout>
                        </deployable>
                    </deployables>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
