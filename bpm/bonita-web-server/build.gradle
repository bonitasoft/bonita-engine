import org.apache.tools.ant.filters.ReplaceTokens

group = 'org.bonitasoft.console'
description = 'Bonita Web Server'

repositories {
    maven { url = uri('https://maven.restlet.talend.com') }
}

dependencies {
    implementation(project(":bpm:bonita-common"))
    implementation(project(":bpm:bonita-web-extensions"))
    implementation libs.commonsIO
    implementation libs.slf4jApi
    implementation libs.ehCache
    implementation libs.commonsFileUpload
    implementation libs.commonsBeanUtils
    implementation libs.commonsCollections
    implementation libs.commonsLang
    implementation libs.jsonSimple
    implementation libs.urlrewritefilter
    implementation libs.jakartaJstl
    implementation libs.jakartaJstlApi
    implementation libs.restlet
    implementation(libs.restletServlet) {
        exclude(group: "org.restlet.jee", module: "org.restlet")
    }
    implementation(libs.restletJackson) {
        exclude(group: "org.codehaus.woodstox", module: "woodstox-core-asl")
        exclude(group: "org.codehaus.woodstox", module: "stax2-api")
    }
    implementation libs.woodstoxCore
    implementation libs.groovyCore
    implementation libs.xbeanClassloader
    implementation libs.springCore
    implementation libs.springContext
    implementation libs.springWeb
    implementation libs.springWebMvc
    implementation libs.jgettext
    implementation libs.owaspHtmlSanitizer

    compileOnly libs.lombok
    annotationProcessor libs.lombok

    testImplementation(project(":bpm:bonita-server"))
    testImplementation libs.jsonUnit
    testImplementation libs.assertj
    testImplementation libs.logback
    testImplementation libs.springTest
    testImplementation libs.systemRules
    testImplementation libs.mockitoCore
    testImplementation libs.hamcrest
    testImplementation libs.junit4
}

configurations {
    all {
        // Specify woodstox version to override the version pulled by jackson-dataformat-xml (transitive dep of restlet)
        resolutionStrategy.force libs.woodstoxCore
        // Specify Guava version to override the version pulled by owasp-java-html-sanitizer
        resolutionStrategy.force libs.guava //forcing managed version (transitive dependency of owasp-java-html-sanitizer)
    }
    tests
}

processResources {
    inputs.property("version", project.version)
    inputs.property("brandingVersion", brandingVersion)
    from('src/main/resources') {
        include '**/*'
        filter(ReplaceTokens, tokens: [projectVersion : project.version,
                                       brandingVersion: brandingVersion,
                                       buildYear      : String.valueOf(LocalDate.now().getYear())])
    }
}

tasks.register('buildZip', Zip) {
    from('src/main/resources') {
        include 'VERSION'
        filter(ReplaceTokens, tokens: [projectVersion : project.version,
                                       brandingVersion: brandingVersion,
                                       buildYear      : String.valueOf(LocalDate.now().getYear())])
    }
    from 'src/main/webapp'
}

tasks.named("build") {
    dependsOn tasks.named("buildZip")
}

tasks.named("test") {
    dependsOn tasks.named("testsJar")
}

tasks.register('testsJar', Jar) {
    dependsOn testClasses
    archiveClassifier = 'tests'
    from(sourceSets.test.output)
}

artifacts {
    tests testsJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact testsJar
            artifact buildZip
            pom { pom ->
                name = 'Bonita Web Server'
                description = 'Web API implementation module'
                org.bonitasoft.engine.gradle.PomUtils.pomCommunityPublication(pom)
            }
        }
    }
}
