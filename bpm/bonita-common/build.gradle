import org.bonitasoft.engine.gradle.PomUtils

plugins { id 'com.intershop.gradle.jaxb' version '2.0.0' }


dependencies {
    compile "commons-io:commons-io:${Deps.commonsIOVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${Deps.jacksonDataBindingVersion}"
    compile "org.slf4j:slf4j-api:${Deps.slf4jVersion}"
    compile "org.apache.commons:commons-lang3:${Deps.commonsLangVersion}"
    compile "com.fasterxml.jackson.core:jackson-annotations:${Deps.jacksonDataBindingVersion}"
    runtime "javax.xml.bind:jaxb-api:${Deps.jaxbVersion}"
    runtime "org.glassfish.jaxb:jaxb-runtime:${Deps.jaxbVersion}"
    runtime "javax.activation:activation:${Deps.javaxActivationVersion}"
    testCompile "junit:junit:${Deps.junit4Version}"
    testCompile "org.assertj:assertj-core:${Deps.assertjVersion}"
    testCompile "org.mockito:mockito-core:${Deps.mockitoVersion}"
    testCompile "net.javacrumbs.json-unit:json-unit-fluent:${Deps.jsonUnitVersion}"
    testCompile "xmlunit:xmlunit:${Deps.xmlunitVersion}"
    annotationProcessor "org.projectlombok:lombok:${Deps.lombokVersion}"
    compileOnly "org.projectlombok:lombok:${Deps.lombokVersion}"
}

def generateInfoProperties = task("generateInfoProperties") {
    doFirst {
        project.file("build/generated/main/resources").mkdirs()
        project.file("build/generated/main/resources/info.properties").text = "version $project.version"
    }
    inputs.property "version", project.version
    outputs.file project.file("build/generated/main/resources/info.properties")
}
tasks.processResources.dependsOn generateInfoProperties

sourceSets {
    main {
        resources {
            srcDir project.file("build/generated/main/resources")
        }
    }
}
task testsJar(type: Jar) {
    classifier = 'tests'
    from(sourceSets.test.output)
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

task listDependencies(type: DependencyReportTask) {}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from project.components.java
            artifact project.sourcesJar
            artifact project.javadocJar
            artifact project.testsJar
            pom { pom ->
                name = "Bonita Common"
                description = "Bonita Common is the useful layer common to bonita-client and bonita-server"
                PomUtils.pomCommunityPublication(pom)
            }
        }
    }
}


jaxb {
    //generates schema from java code
    schemaGen {
        forms {
            javaFiles = fileTree(dir: 'src/main/java', includes: [
                    'org/bonitasoft/engine/bpm/bar/form/model/*.java',
                    'org/bonitasoft/engine/form/*.java'
            ])
            namespaceconfigs = ['http://www.bonitasoft.org/ns/form/6.0': 'form-mapping.xsd']
            outputDir = project.file("build/generated/jaxb/schemas/form-mapping")
        }
        application {
            javaFiles = fileTree(dir: 'src/main/java', includes: ['org/bonitasoft/engine/business/application/xml/**/*.java'],
                    excludes: ['**/*Builder.java'])
            namespaceconfigs = ['http://documentation.bonitasoft.com/application-xml-schema/1.0': 'application.xsd']
            outputDir = project.file("build/generated/jaxb/schemas/application")
        }
        bom {
            javaFiles = fileTree(dir: 'src/main/java', include: 'org/bonitasoft/engine/bdm/model/**/*.java')
            namespaceconfigs = ['': 'bom.xsd']
            outputDir = project.file("build/generated/jaxb/schemas/bom")
        }
        profile {
            javaFiles = fileTree(dir: 'src/main/java', include: 'org/bonitasoft/engine/profile/xml/**/*.java')
            namespaceconfigs = ['http://www.bonitasoft.org/ns/profile/6.1': 'profiles.xsd']
            outputDir = project.file("build/generated/jaxb/schemas/profiles")
        }
    }
}

processResources {
    from "$buildDir/generated/jaxb/schemas/form-mapping"
    from "$buildDir/generated/jaxb/schemas/application"
    from "$buildDir/generated/jaxb/schemas/bom"
    from "$buildDir/generated/jaxb/schemas/profiles"
}

//tasks.processResources.dependsOn tasks.jaxbSchemaGenProcessdefinition
tasks.jaxbSchemaGenApplication.outputs.cacheIf { true }
tasks.jaxbSchemaGenBom.outputs.cacheIf { true }
tasks.jaxbSchemaGenProfile.outputs.cacheIf { true }
tasks.jaxbSchemaGenForms.outputs.cacheIf { true }
tasks.processResources.dependsOn tasks.jaxbSchemaGenApplication
tasks.processResources.dependsOn tasks.jaxbSchemaGenBom
tasks.processResources.dependsOn tasks.jaxbSchemaGenProfile
tasks.processResources.dependsOn tasks.jaxbSchemaGenForms
