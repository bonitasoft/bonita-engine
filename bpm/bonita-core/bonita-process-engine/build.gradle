plugins {
    id 'groovy'
}
configurations { schemagen }
dependencies {
    api project(':bpm:bonita-core:bonita-home-server')
    api project(':bpm:bonita-core:bonita-actor-mapping')
    api project(':bpm:bonita-core:bonita-category')
    api project(':bpm:bonita-core:bonita-process-instance')
    api project(':bpm:bonita-core:bonita-contract-data')
    api project(':bpm:bonita-core:bonita-user-filter')
    api project(':bpm:bonita-core:bonita-login')
    api project(':bpm:bonita-core:bonita-process-definition')
    api project(':bpm:bonita-core:bonita-process-comment')
    api project(':bpm:bonita-core:bonita-platform-login')
    api project(':bpm:bonita-core:bonita-core-data')
    api project(':bpm:bonita-core:bonita-supervisor-mapping')
    api project(':bpm:bonita-synchro-repository:bonita-synchro-service')
    api project(':services:bonita-builder')
    api project(':services:bonita-commons')
    api project(':services:bonita-archive')
    api project(':services:bonita-authentication')
    api project(':services:bonita-authorization')
    api project(':services:bonita-cache')
    api project(':services:bonita-classloader')
    api project(':services:bonita-command')
    api project(':services:bonita-connector-executor')
    api project(':services:bonita-data-definition')
    api project(':services:bonita-data-instance')
    api project(':services:bonita-events')
    api project(':services:bonita-expression')
    api project(':services:bonita-external-identity-mapping')
    api project(':services:bonita-identity')
    api project(':services:bonita-incident')
    api project(':services:bonita-lock')
    api project(':services:bonita-log')
    api project(':services:bonita-page')
    api project(':bpm:bonita-core:bonita-parameter')
    api project(':services:bonita-persistence')
    api project(':services:bonita-platform')
    api project(':services:bonita-platform-authentication')
    api project(':services:bonita-platform-command')
    api project(':services:bonita-platform-session')
    api project(':services:bonita-profile')
    api project(':services:bonita-scheduler')
    api project(':services:bonita-session')
    api project(':services:bonita-authorization')
    api project(':services:bonita-time-tracker')
    api project(':services:bonita-transaction')
    api project(':services:bonita-work')
    api project(':services:bonita-business-application')
    api project(':bpm:bonita-core:bonita-form-mapping')
    api project(':services:bonita-business-data:bonita-business-data-api')
    api project(':services:bonita-resources')
    api project(':services:bonita-temporary-content')
    api "com.fasterxml.jackson.core:jackson-databind"
    api project(':platform:platform-resources')
    api "commons-io:commons-io:${Deps.commonsIOVersion}"
    api "org.springframework:spring-context:${Deps.springVersion}"
    api "org.springframework.session:spring-session-core:${Deps.springSessionVersion}"
    api "org.springframework:spring-web:${Deps.springVersion}"
    api "org.codehaus.groovy:groovy:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-servlet:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-xml:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-json:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-jmx:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-nio:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-groovysh:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-datetime:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-dateutil:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-docgenerator:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-jsr223:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-sql:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-templates:${Deps.groovyVersion}"
    api "org.codehaus.groovy:groovy-yaml:${Deps.groovyVersion}"
    api "io.micrometer:micrometer-core:${Deps.micrometerVersion}"
    api project(':bpm:bonita-organization-model')

    // Dependency on javax.annotations as it is not provided anymore in Java 11:
    api("javax.annotation:javax.annotation-api:${Deps.javaxAnnotationsVersion}")

    annotationProcessor "org.projectlombok:lombok:${Deps.lombokVersion}"
    compileOnly "org.projectlombok:lombok:${Deps.lombokVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${Deps.junit5Version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${Deps.junit5Version}"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${Deps.junit5Version}"
    testAnnotationProcessor "org.projectlombok:lombok:${Deps.lombokVersion}"
    testImplementation "junit:junit:${Deps.junit4Version}"
    testImplementation "org.assertj:assertj-core:${Deps.assertjVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${Deps.mockitoVersion}"
    testImplementation "com.github.stefanbirkner:system-rules:${Deps.systemRulesVersion}"      // works with Junit4
    testImplementation "com.github.stefanbirkner:system-lambda:${Deps.systemLambdaVersion}"    // works with Junit5
    testImplementation "org.springframework:spring-test:${Deps.springVersion}"
    compileOnly project(':bpm:bonita-common')
    testImplementation testFixtures(project(':bpm:bonita-common'))
    testImplementation "org.awaitility:awaitility:${Deps.awaitilityVersion}"
    testRuntimeOnly "ch.qos.logback:logback-classic:${Deps.logbackVersion}"

    schemagen("org.glassfish.jaxb:jaxb-jxc:${Deps.jaxbJxcVersion}", project(':bpm:bonita-common'))
}

tasks.register('schemagen') {
    def destDir = file("$buildDir/schemas")
    doLast {
        destDir.mkdirs()
        ant.taskdef(name: 'schemagen', classname: 'com.sun.tools.jxc.SchemaGenTask', classpath: configurations.schemagen.asPath)
    
        ant.schemagen(srcdir: new File('src/main/java/'), destdir: destDir, includeAntRuntime: false) {
            schema(file: "organization.xsd", namespace: "http://documentation.bonitasoft.com/organization-xml-schema/1.1")
            classpath { pathelement(path: configurations.schemagen.asPath) }
            include(name: 'org/bonitasoft/engine/identity/xml/**/*.java')
        }

    }
    inputs.dir('src/main/java/')
    outputs.file("$destDir/organization.xsd")
}

processResources { from "$buildDir/schemas" }

tasks.processResources.dependsOn tasks.schemagen

tasks.schemagen.outputs.cacheIf { true }

test {
    useJUnitPlatform()
}