# Bonita Tenant server core configuration
userName=install
userPassword=install

# Business data configuration
bdm.db.vendor=${sysprop.bonita.bdm.db.vendor:h2}
bdm.datasource.jndi.path=${sysprop.bonita.businessdata.datasource.jndi:java:comp/env/BusinessDataDS}
bdm.notmanageddatasource.jndi.path=${sysprop.bonita.businessdata.notmanageddatasource.jndi:java:comp/env/NotManagedBizDataDS}
bdm.hibernate.transaction.jta_platform=${sysprop.bonita.hibernate.transaction.jta_platform:org.bonitasoft.engine.persistence.Narayana5HibernateJtaPlatform}

#Cron jobs configuration
#Seconds Minutes Hours Day-of-Month Month Day-of-Week Year (optional field)
org.bonitasoft.engine.clean.invalid.sessions.cron=0 0 */2 * * ?

# name of the servlet used to download content of document
document.servlet.url=documentDownload

# Session service
# session duration in ms
bonita.tenant.session.duration=3600000

# Connector executor
bonita.tenant.connector.queueCapacity=10000
bonita.tenant.connector.corePoolSize=10
bonita.tenant.connector.maximumPoolSize=10
bonita.tenant.connector.keepAliveTimeSeconds=100

# Produce a warning log when connector took longer to execute than this value
bonita.tenant.connector.warnWhenLongerThanMillis=10000

# Work service
# Time to wait in seconds for all work to terminate when the service is paused or stopped
bonita.tenant.work.terminationTimeout=30
bonita.tenant.work.corePoolSize=10
bonita.tenant.work.maximumPoolSize=10
bonita.tenant.work.keepAliveTimeSeconds=60
bonita.tenant.work.queueCapacity=500000

# Add a delay on work when the transaction that registers the work has multiple XA Resources
# This is an SQL Server specific property to ensure all data commit are visible when the next work is executed.
bonita.tenant.work.sqlserver.delayOnMultipleXAResource=100

# When a work fails, log only a limited number of frames from the stacktrace
bonita.tenant.work.exceptionsNumberOfFrameToLog=3

bonita.tenant.work.batch_restart_size=1000

# Retry mechanism: retry work when they fails because of an error that is transient
# maximum number of times a work will be retried before setting it as failed
bonita.tenant.work.maxRetry=10
# delay in millis before retrying the work
bonita.tenant.work.retry.delay=1000
# factor to multiply the delay with, between two subsequent retries
bonita.tenant.work.retry.factor=2

# Recovery Mechanism: recreate works when they are lost due to incidents
# All following configuration should work for everyone, it can be changed only to do performance tuning in limit-cases
# Avoid verifying elements recently modified, by default no elements updated during the last hour is considered (ISO-8601 duration format).
bonita.tenant.recover.consider_elements_older_than=PT1H
# Duration after the end of the previous execution before a new one is started. By default recovery runs every 2 hours (ISO-8601 duration format)
bonita.tenant.recover.delay_between_recovery=PT2H

# Time tracker
bonita.tenant.timetracker.startTracking=false
bonita.tenant.timetracker.maxSize=1000
bonita.tenant.timetracker.flushIntervalInSeconds=30
bonita.tenant.timetracker.csv.activateAtStart=true
bonita.tenant.timetracker.csv.folder=${java.io.tmpdir}
bonita.tenant.timetracker.csv.separator=;
bonita.tenant.timetracker.memory.activateAtStart=false
bonita.tenant.timetracker.memory.maxSize=1000000

# Default tenant cache: used if not specific cache is defined
bonita.tenant.cache.default.maxElementsInMemory=1000
bonita.tenant.cache.default.inMemoryOnly=true
bonita.tenant.cache.default.eternal=true
bonita.tenant.cache.default.evictionPolicy=LRU
bonita.tenant.cache.default.timeToLiveSeconds=3600
bonita.tenant.cache.default.maxElementsOnDisk=20000
bonita.tenant.cache.default.copyOnRead=false
bonita.tenant.cache.default.copyOnWrite=false
bonita.tenant.cache.default.readIntensive=false

# Connector service cache configuration
bonita.tenant.cache.connector.maxElementsInMemory=10000
bonita.tenant.cache.connector.inMemoryOnly=false
bonita.tenant.cache.connector.eternal=false
bonita.tenant.cache.connector.evictionPolicy=LRU
bonita.tenant.cache.connector.timeToLiveSeconds=3600
bonita.tenant.cache.connector.maxElementsOnDisk=20000
bonita.tenant.cache.connector.copyOnRead=false
bonita.tenant.cache.connector.copyOnWrite=false
bonita.tenant.cache.connector.readIntensive=true

# Parameter service cache configuration
bonita.tenant.cache.parameter.maxElementsInMemory=10000
bonita.tenant.cache.parameter.inMemoryOnly=false
bonita.tenant.cache.parameter.eternal=false
bonita.tenant.cache.parameter.evictionPolicy=LRU
bonita.tenant.cache.parameter.timeToLiveSeconds=3600
bonita.tenant.cache.parameter.maxElementsOnDisk=20000
bonita.tenant.cache.parameter.copyOnRead=false
bonita.tenant.cache.parameter.copyOnWrite=false
bonita.tenant.cache.parameter.readIntensive=false

# Process Definition service cache configuration
bonita.tenant.cache.processdef.maxElementsInMemory=10000
bonita.tenant.cache.processdef.inMemoryOnly=true
bonita.tenant.cache.processdef.eternal=false
bonita.tenant.cache.processdef.evictionPolicy=LRU
bonita.tenant.cache.processdef.timeToLiveSeconds=3600
bonita.tenant.cache.processdef.maxElementsOnDisk=20000
bonita.tenant.cache.processdef.copyOnRead=false
bonita.tenant.cache.processdef.copyOnWrite=false
bonita.tenant.cache.processdef.readIntensive=false

# User FIlter service cache configuration
bonita.tenant.cache.userfilter.maxElementsInMemory=10000
bonita.tenant.cache.userfilter.inMemoryOnly=false
bonita.tenant.cache.userfilter.eternal=false
bonita.tenant.cache.userfilter.evictionPolicy=LRU
bonita.tenant.cache.userfilter.timeToLiveSeconds=3600
bonita.tenant.cache.userfilter.maxElementsOnDisk=20000
bonita.tenant.cache.userfilter.copyOnRead=false
bonita.tenant.cache.userfilter.copyOnWrite=false
bonita.tenant.cache.userfilter.readIntensive=false

# Groovy script service cache configuration
bonita.tenant.cache.groovy.maxElementsInMemory=10000
bonita.tenant.cache.groovy.inMemoryOnly=true
bonita.tenant.cache.groovy.eternal=true
bonita.tenant.cache.groovy.evictionPolicy=LRU
bonita.tenant.cache.groovy.timeToLiveSeconds=3600
bonita.tenant.cache.groovy.maxElementsOnDisk=20000
bonita.tenant.cache.groovy.copyOnRead=false
bonita.tenant.cache.groovy.copyOnWrite=false
bonita.tenant.cache.groovy.readIntensive=false

# Transient Data service cache configuration
bonita.tenant.cache.transientdata.maxElementsInMemory=10000
bonita.tenant.cache.transientdata.inMemoryOnly=true
bonita.tenant.cache.transientdata.eternal=true
bonita.tenant.cache.transientdata.evictionPolicy=LRU
bonita.tenant.cache.transientdata.timeToLiveSeconds=3600
bonita.tenant.cache.transientdata.maxElementsOnDisk=20000
bonita.tenant.cache.transientdata.copyOnRead=false
bonita.tenant.cache.transientdata.copyOnWrite=false
bonita.tenant.cache.transientdata.readIntensive=false

# Business Data Repository hibernate configuration
bonita.tenant.bdm.repository.show_sql=false
bonita.tenant.bdm.repository.format_sql=false
bonita.tenant.bdm.repository.validator.autoregister_listeners=false
bonita.tenant.bdm.repository.validator.apply_to_ddl=false
bonita.tenant.bdm.repository.javax.persistence.validation.mode=NONE

# Business Data Schema manager
bonita.tenant.bdm.schemamanager.show_sql=true
bonita.tenant.bdm.schemamanager.format_sql=true
bonita.tenant.bdm.schemamanager.validator.autoregister_listeners=false
bonita.tenant.bdm.schemamanager.validator.apply_to_ddl=false
bonita.tenant.bdm.schemamanager.javax.persistence.validation.mode=NONE

# Page and form mapping authorization rules
# you can customize this mapping by defining your own bean
# that implement org.bonitasoft.engine.core.form.AuthorizationRuleMapping
# and a set of org.bonitasoft.engine.page.AuthorizationRule
# to be declared in bonita-tenant-custom.xml
#bonita.tenant.authorization.rule.mapping=customAuthorizationRuleMapping
bonita.tenant.authorization.rule.mapping=defaultAuthorizationRuleMapping
# to restore pre-7.3.0 behavior (where manager of user involved in process instance could access Case Overview), use this implementation below instead:
#bonita.tenant.authorization.rule.mapping=managerInvolvedAuthorizationRuleMappingImpl


# Work execution audit
# Durations must be ChronoUnit enum values
#bonita.tenant.work.audit.activated=true
# Too many executions threshold
#bonita.tenant.work.audit.abnormal.execution.threshold.execution_count=10
#bonita.tenant.work.audit.abnormal.execution.threshold.execution_count_duration_amount=10
#bonita.tenant.work.audit.abnormal.execution.threshold.execution_count_duration_unit=MINUTES
# Too much time elapsed since registration
#bonita.tenant.work.audit.abnormal.execution.threshold.elapsed_duration_since_registration_amount=30
#bonita.tenant.work.audit.abnormal.execution.threshold.elapsed_duration_since_registration_unit=MINUTES
