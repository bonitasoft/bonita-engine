<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping auto-import="false">

	<query name="getDeployInfoByProcessDefId">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.processId = :processId
	</query>

	<query name="getProcessDefinitionDeployInfosByName">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.name = :name
	</query>

	<query name="getProcessesWithActorOnlyForUser">
		SELECT DISTINCT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
			 org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
			 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
		WHERE process_definition.processId = actor.scopeId
		AND actor.id = actormember.actorId
		AND actormember.userId = :userId
		AND actormember.actorId NOT IN (
			SELECT actorId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS am2
			WHERE am2.userId != actormember.userId
		)
	</query>

	<query name="getProcessesWithActorOnlyForUsers">
		SELECT DISTINCT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
			 org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
			 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
		WHERE process_definition.processId = actor.scopeId
		AND actor.id = actormember.actorId
		AND actormember.userId IN (:userIds)
		AND actormember.actorId NOT IN (
			SELECT actorId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS am2
			WHERE am2.userId NOT IN (:userIds)
		)
	</query>

	<query name="getProcessesWithActorOnlyForRole">
		SELECT DISTINCT process_definition
		FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
			 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actor_member,
			 org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE actor.scopeId = process_definition.processId 
		AND actor.id = actor_member.actorId
		AND actor_member.roleId = :roleId
		AND	actor_member.actorId NOT IN (
				SELECT am2.actorId
				FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS am2
				WHERE am2.roleId != actor_member.roleId
				)
	</query>

	<query name="getProcessesWithActorOnlyForRoles">
		SELECT DISTINCT process_definition
		FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
			 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actor_member,
			 org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE actor.scopeId = process_definition.processId 
		AND actor.id = actor_member.actorId
		AND actor_member.roleId IN :roleIds
		AND	actor_member.actorId NOT IN (
				SELECT am2.actorId
				FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS am2
				WHERE am2.roleId NOT IN (:roleIds)
				)
	</query>
	
	<query name="getProcessesWithActorOnlyForGroup">
		SELECT DISTINCT process_definition
		FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
			 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actor_member,
			 org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE actor.scopeId = process_definition.processId 
		AND actor.id = actor_member.actorId
		AND actor_member.groupId IN (
			SELECT groupe.id
        	FROM org.bonitasoft.engine.identity.model.impl.SGroupImpl AS groupe,
        		 org.bonitasoft.engine.identity.model.impl.SGroupImpl AS group0
        	WHERE ( CONCAT(groupe.parentPath,'/',groupe.name,'/') LIKE CONCAT('/',group0.name,'/','%') 
					OR groupe.id = :groupId )
        	AND group0.id = :groupId 
        	)
        AND actor_member.actorId NOT IN (
			SELECT am2.actorId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS am2
        	WHERE am2.groupId != actor_member.groupId
        	AND am2.groupId NOT IN (
            	SELECT groupe.id
                FROM org.bonitasoft.engine.identity.model.impl.SGroupImpl AS groupe,
                org.bonitasoft.engine.identity.model.impl.SGroupImpl AS group0
                WHERE ( CONCAT(groupe.parentPath,'/',groupe.name,'/') LIKE CONCAT('/',group0.name,'/','%') 
					OR groupe.id = :groupId )
        	AND group0.id = :groupId 
                )
			)
	</query>

	<query name="getProcessesWithActorOnlyForGroups">
		SELECT DISTINCT process_definition
		FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
			 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actor_member,
			 org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE actor.scopeId = process_definition.processId 
		AND actor.id = actor_member.actorId
		AND actor_member.groupId IN (
			SELECT groupe.id
        	FROM org.bonitasoft.engine.identity.model.impl.SGroupImpl AS groupe,
        		 org.bonitasoft.engine.identity.model.impl.SGroupImpl AS group0
        	WHERE ( CONCAT(groupe.parentPath,'/',groupe.name,'/') LIKE CONCAT('/',group0.name,'/','%') 
					OR groupe.id IN (:groupIds) )
			AND group0.id IN (:groupIds) 
        	)
        AND actor_member.actorId NOT IN (
			SELECT am2.actorId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS am2
        	WHERE am2.groupId != actor_member.groupId
        	AND am2.groupId NOT IN (
            	SELECT groupe.id
                FROM org.bonitasoft.engine.identity.model.impl.SGroupImpl AS groupe,
                org.bonitasoft.engine.identity.model.impl.SGroupImpl AS group0
                WHERE ( CONCAT(groupe.parentPath,'/',groupe.name,'/') LIKE CONCAT('/',group0.name,'/','%') 
						OR groupe.id IN (:groupIds) )
                AND group0.id IN (:groupIds) 
                )
			)
	</query>

	<query name="getProcessDefinitionIdByNameAndVersion">
		SELECT process_definition.processId
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.name = :name
		AND process_definition.version = :version
	</query>

	<query name="getProcessDefinitionDeployInfos">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
	</query>

	<query name="getNumberOfProcessDefinitions">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
	</query>

	<query name="getNumberOfProcessDefinitionsInActivationState">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.activationState = :activationState
	</query>

	<query name="getProcessDefinitionsIds">
		SELECT process_definition.processId
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
	</query>

	<query name="getProcessDefinitionsIdsInActivationState">
		SELECT process_definition.processId
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.activationState = :activationState
	</query>

	<query name="getSubSetOfProcessDefinitionDeployInfos">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.processId IN (:processIds)
	</query>

	<query name="searchSProcessDefinitionDeployInfoStartedBy">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.activationState = 'ENABLED'
		AND (process_definition.processId IN (
				SELECT aprocessInstance.processDefinitionId
		        FROM org.bonitasoft.engine.core.process.instance.model.archive.impl.SAProcessInstanceImpl AS aprocessInstance
		        WHERE aprocessInstance.startedBy = :startedBy)
	        OR
		    process_definition.processId IN (
		        SELECT processInstance.processDefinitionId
		        FROM org.bonitasoft.engine.core.process.instance.model.impl.SProcessInstanceImpl AS processInstance
		        WHERE processInstance.startedBy = :startedBy)
	        )
	</query>

	<query name="getNumberOfSProcessDefinitionDeployInfoStartedBy">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.activationState = 'ENABLED'
		AND (process_definition.processId IN (
				SELECT aprocessInstance.processDefinitionId
		        FROM org.bonitasoft.engine.core.process.instance.model.archive.impl.SAProcessInstanceImpl AS aprocessInstance
		        WHERE aprocessInstance.startedBy = :startedBy)
	        OR
		    process_definition.processId IN (
		        SELECT processInstance.processDefinitionId
		        FROM org.bonitasoft.engine.core.process.instance.model.impl.SProcessInstanceImpl AS processInstance
		        WHERE processInstance.startedBy = :startedBy)
	        )
	</query>

	<query name="searchSProcessDefinitionDeployInfo">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
	</query>

	<query name="getNumberOfSProcessDefinitionDeployInfo">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
	</query>
			  
	<query name="getNumberOfSProcessDefinitionDeployInfoUncategorized">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE NOT EXISTS (
			SELECT categorymapping
		    FROM org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping 
		    WHERE categorymapping.processId = process_definition.processId
		)
	</query>

	<query name="searchSProcessDefinitionDeployInfoUncategorized">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE NOT EXISTS (
			SELECT categorymapping 
			FROM org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping 
			WHERE categorymapping.processId = process_definition.processId
		)	
	</query>
	
	<query name="getNumberOfSProcessDefinitionDeployInfoUnrelatedToCategory">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.processId NOT IN (
				SELECT categorymapping.processId
				FROM org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping
				WHERE categorymapping.categoryId = :categoryId
		)
	</query>
	
	<query name="searchSProcessDefinitionDeployInfoUnrelatedToCategory">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.processId NOT IN (
				SELECT categorymapping.processId
				FROM org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping
				WHERE categorymapping.categoryId = :categoryId
		)
	</query>

	<query name="getNumberOfSProcessDefinitionDeployInfoUncategorizedUserCanStart">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE NOT EXISTS (
			SELECT categorymapping 
			FROM org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping 
			WHERE categorymapping.processId = process_definition.processId
		)
		AND activationState = 'ENABLED'
		AND process_definition.processId IN (
			SELECT actor.scopeId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor
			WHERE actor.initiator = TRUE
				AND actor.id IN (
				SELECT actor.id
				FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
				org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
				WHERE actor.id = actormember.actorId 
				AND ( actormember.userId = :userId
				 	  OR actormember.id IN (
							SELECT actormember.id
							FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
							WHERE um.userId = :userId 
							AND (
								(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
								OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
								OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId))
							)
					)
			)
			
		)
	</query>

	<query name="searchSProcessDefinitionDeployInfoUncategorizedUserCanStart">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE not exists (SELECT categorymapping 
		                  FROM org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping 
		                  WHERE categorymapping.processId = process_definition.processId)			
		AND activationState = 'ENABLED'
		AND process_definition.processId IN (
			SELECT actor.scopeId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor
			WHERE actor.initiator = TRUE
				AND actor.id IN (
				SELECT actor.id
				FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
				org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
				WHERE actor.id = actormember.actorId 
				AND ( actormember.userId = :userId
				 	  OR actormember.id IN (
							SELECT actormember.id
							FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
							WHERE um.userId = :userId 
							AND (
								(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
								OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
								OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId))
							)
					)
			)
			
		)
	</query>
		 
	<query name="searchSProcessDefinitionDeployInfoUserCanStart">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE activationState = 'ENABLED'
		AND process_definition.processId IN (
			SELECT actor.scopeId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor
			WHERE actor.initiator = TRUE
				AND actor.id IN (
				SELECT actor.id
				FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
				org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
				WHERE actor.id = actormember.actorId 
				AND ( actormember.userId = :userId
				 	  OR actormember.id IN (
							SELECT actormember.id
							FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
							WHERE um.userId = :userId 
							AND (
								(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
								OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
								OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId))
							)
					)
			)
			
		)
	</query>
	
	<query name="getNumberOfSProcessDefinitionDeployInfoUserCanStart">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE activationState = 'ENABLED'
		AND process_definition.processId IN (
			SELECT actor.scopeId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor
			WHERE actor.initiator = TRUE
				AND actor.id IN (
				SELECT actor.id
				FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
				org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
				WHERE actor.id = actormember.actorId 
				AND ( actormember.userId = :userId
				 	  OR actormember.id IN (
							SELECT actormember.id
							FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
							WHERE um.userId = :userId 
							AND (
								(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
								OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
								OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId))
							)
					)
			)
		)
	</query>
	
	<query name="searchSProcessDefinitionDeployInfoUsersManagedByCanStart">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE activationState = 'ENABLED'
		AND process_definition.processId IN (
			SELECT actor.scopeId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor
			WHERE actor.initiator = TRUE
			AND EXISTS (
				SELECT actor.id
				FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
				WHERE actor.id = actormember.actorId 
				AND ( 	
					actormember.userId = :managerUserId
					OR EXISTS (
						SELECT actormember.userId
						FROM org.bonitasoft.engine.identity.model.impl.SUserImpl AS user
						WHERE actormember.userId = user.id
						AND user.managerUserId = :managerUserId
					)
					OR EXISTS (
						SELECT actormember.id
						FROM org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
						WHERE (
							um.userId = :managerUserId 
							OR EXISTS (
								SELECT user.id
								FROM org.bonitasoft.engine.identity.model.impl.SUserImpl AS user
								WHERE um.userId = user.id
								AND user.managerUserId = :managerUserId
							)
						)
						AND (
							(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
							OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
							OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId)
						)
					)
				)
			)
		)
	</query>
	
	<query name="getNumberOfSProcessDefinitionDeployInfoUsersManagedByCanStart">
		SELECT COUNT(process_definition)
				FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE activationState = 'ENABLED'
		AND process_definition.processId IN (
			SELECT actor.scopeId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor
			WHERE actor.initiator = TRUE
			AND EXISTS (
				SELECT actor.id
				FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
				WHERE actor.id = actormember.actorId 
				AND ( 	
					actormember.userId = :managerUserId
					OR EXISTS (
						SELECT actormember.userId
						FROM org.bonitasoft.engine.identity.model.impl.SUserImpl AS user
						WHERE actormember.userId = user.id
						AND user.managerUserId = :managerUserId
					)
					OR EXISTS (
						SELECT actormember.id
						FROM org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
						WHERE (
							um.userId = :managerUserId 
							OR EXISTS (
								SELECT user.id
								FROM org.bonitasoft.engine.identity.model.impl.SUserImpl AS user
								WHERE um.userId = user.id
								AND user.managerUserId = :managerUserId
							)
						)
						AND (
							(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
							OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
							OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId)
						)
					)
				)
			)
		)
	</query>
	
	<query name="getNumberOfSProcessDefinitionDeployInfowithSProcessCategoryMappingUserCanStart">
		SELECT COUNT(process_definition.id)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
			 org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping
		WHERE activationState = 'ENABLED'
		AND categorymapping.processId = process_definition.processId
		AND process_definition.processId IN (
			SELECT actor.scopeId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor
			WHERE actor.initiator = TRUE
			AND actor.id IN (
				SELECT actor.id
				FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
					 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
				WHERE actor.id = actormember.actorId 
				AND ( actormember.userId = :userId
					OR actormember.id IN (
						SELECT actormember.id
						FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
						WHERE um.userId = :userId 
						AND (
							(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
							OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
							OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId)
						)
					)
				)
			)
		)
	</query>

	<query name="searchSProcessDefinitionDeployInfowithSProcessCategoryMappingUserCanStart">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
			 org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping
		WHERE activationState = 'ENABLED'
		AND categorymapping.processId = process_definition.processId
		AND process_definition.processId IN (
			SELECT actor.scopeId
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor
			WHERE actor.initiator = TRUE
			AND actor.id IN (
				SELECT actor.id
				FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
					 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
				WHERE actor.id = actormember.actorId 
				AND ( actormember.userId = :userId
					OR actormember.id IN (
					 	SELECT actormember.id
						FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
						WHERE um.userId = :userId 
						AND (
							(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
							OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
							OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId)
						)
					)
				)
			)
		)
	</query>

	<query name="getNumberOfSProcessDefinitionDeployInfowithSProcessCategoryMappingUserSupervised">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
			 org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping
		WHERE categorymapping.processId = process_definition.processId
		AND process_definition.processId IN (
			SELECT supervisor.processDefId
			FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor
			WHERE supervisor.userId = :userId
			OR (
				supervisor.id IN (
					SELECT supervisor.id
					FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
					WHERE um.userId = :userId 
					AND (
						(supervisor.groupId = um.groupId AND supervisor.roleId &lt;= 0)
						OR (supervisor.roleId = um.roleId AND supervisor.groupId &lt;= 0)
						OR (supervisor.groupId = um.groupId AND supervisor.roleId = um.roleId)
					)
				)
			)
		)
	</query>
	
	<query name="searchSProcessDefinitionDeployInfowithSProcessCategoryMappingUserSupervised">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
			 org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping
		WHERE categorymapping.processId = process_definition.processId
		AND process_definition.processId IN (
			SELECT supervisor.processDefId
			FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor
			WHERE supervisor.userId = :userId
			OR (
				supervisor.id IN (
					SELECT supervisor.id
					FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
					WHERE um.userId = :userId 
					AND (
						(supervisor.groupId = um.groupId AND supervisor.roleId &lt;= 0)
						OR (supervisor.roleId = um.roleId AND supervisor.groupId &lt;= 0)
						OR (supervisor.groupId = um.groupId AND supervisor.roleId = um.roleId)
					)
				)
			)
		)
	</query>
	
	<query name="getNumberOfSProcessDefinitionDeployInfoUserSupervised">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.processId IN (
			SELECT supervisor.processDefId
			FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor
			WHERE supervisor.userId = :userId
			OR (
				supervisor.id IN (
					SELECT supervisor.id
					FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
					WHERE um.userId = :userId 
					AND (
						(supervisor.groupId = um.groupId AND supervisor.roleId &lt;= 0)
						OR (supervisor.roleId = um.roleId AND supervisor.groupId &lt;= 0)
						OR (supervisor.groupId = um.groupId AND supervisor.roleId = um.roleId)
					)
				)
			)
		)
	</query>
	
	<query name="searchSProcessDefinitionDeployInfoUserSupervised">
		SELECT process_definition
				FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE process_definition.processId IN (
			SELECT supervisor.processDefId
			FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor
			WHERE supervisor.userId = :userId
			OR (
				supervisor.id IN (
					SELECT supervisor.id
					FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
					WHERE um.userId = :userId 
					AND (
						(supervisor.groupId = um.groupId AND supervisor.roleId &lt;= 0)
						OR (supervisor.roleId = um.roleId AND supervisor.groupId &lt;= 0)
						OR (supervisor.groupId = um.groupId AND supervisor.roleId = um.roleId)
					)
				)
			)
		)
	</query>
	
	<query name="getNumberOfSProcessDefinitionDeployInfoUncategorizedAndWithSupervisor">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE not exists (SELECT categorymapping 
		                  FROM org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping 
		                  WHERE categorymapping.processId = process_definition.processId)		
		AND process_definition.processId IN (
			SELECT supervisor.processDefId
			FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor
			WHERE supervisor.userId = :userId
			OR (
				supervisor.id IN (
					SELECT supervisor.id
					FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
					WHERE um.userId = :userId 
					AND (
						(supervisor.groupId = um.groupId AND supervisor.roleId &lt;= 0)
						OR (supervisor.roleId = um.roleId AND supervisor.groupId &lt;= 0)
						OR (supervisor.groupId = um.groupId AND supervisor.roleId = um.roleId)
					)
				)
			)
		)
	</query>
	
	<query name="searchSProcessDefinitionDeployInfoUncategorizedAndWithSupervisor">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
		WHERE not exists (SELECT categorymapping 
		                  FROM org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping 
		                  WHERE categorymapping.processId = process_definition.processId)		
		AND process_definition.processId IN (
			SELECT supervisor.processDefId
			FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor
			WHERE supervisor.userId = :userId
			OR (
				supervisor.id IN (
					SELECT supervisor.id
					FROM org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor, org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
					WHERE um.userId = :userId 
					AND (
						(supervisor.groupId = um.groupId AND supervisor.roleId &lt;= 0)
						OR (supervisor.roleId = um.roleId AND supervisor.groupId &lt;= 0)
						OR (supervisor.groupId = um.groupId AND supervisor.roleId = um.roleId)
					)
				)
			)
		)
	</query>	

	<query name="getProcessDeploymentInfoFromProcessInstanceIds">
		SELECT new map(p.id AS processInstanceId, process_definition.id AS id,process_definition.processId AS processId,process_definition.name AS name,process_definition.version AS version, process_definition.description AS description,process_definition.deploymentDate AS deploymentDate, process_definition.deployedBy AS deployedBy,
		process_definition.activationState AS activationState, process_definition.configurationState AS configurationState, process_definition.displayName AS displayName,process_definition.lastUpdateDate AS lastUpdateDate, process_definition.iconPath AS iconPath, process_definition.displayDescription AS displayDescription)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
			 org.bonitasoft.engine.core.process.instance.model.impl.SProcessInstanceImpl AS p
		WHERE process_definition.processId = p.processDefinitionId
		AND p.id IN (:processInstanceIds)
	</query>

	<query name="getProcessDeploymentInfoFromArchivedProcessInstanceIds">
		SELECT new map(ap.id AS archivedProcessInstanceId, process_definition.id AS id,process_definition.processId AS processId,process_definition.name AS name,process_definition.version AS version, process_definition.description AS description,process_definition.deploymentDate AS deploymentDate, process_definition.deployedBy AS deployedBy,
		process_definition.activationState AS activationState, process_definition.configurationState AS configurationState, process_definition.displayName AS displayName,process_definition.lastUpdateDate AS lastUpdateDate, process_definition.iconPath AS iconPath, process_definition.displayDescription AS displayDescription)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,	
			 org.bonitasoft.engine.core.process.instance.model.archive.impl.SAProcessInstanceImpl AS ap
		WHERE process_definition.processId = ap.processDefinitionId
		AND ap.id IN (:archivedProcessInstanceIds)
	</query>
	
	<query name="searchSProcessDefinitionDeployInfowithSProcessCategoryMapping">
		SELECT process_definition
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
			 org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping
		WHERE categorymapping.processId = process_definition.processId
	</query>

	<query name="getNumberOfSProcessDefinitionDeployInfowithSProcessCategoryMapping">
		SELECT COUNT(process_definition)
		FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
			 org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping
		WHERE categorymapping.processId = process_definition.processId
	</query>
    
    <query name="searchSProcessDeploymentInfosOfCategory">
        SELECT process_definition
        FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
             org.bonitasoft.engine.core.category.model.impl.SProcessCategoryMappingImpl AS categorymapping
        WHERE categorymapping.processId = process_definition.processId
        AND categorymapping.categoryId = :categoryId
    </query>

	<query name="getNumberOfSUserWhoCanStartProcess">
		SELECT COUNT(DISTINCT user)
		FROM org.bonitasoft.engine.identity.model.impl.SUserImpl AS user,
			 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
		WHERE actormember.actorId  IN (
			SELECT actor.id
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
				 org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
			WHERE process_definition.activationState = 'ENABLED'
			AND process_definition.processId = :processId
			AND actor.scopeId = process_definition.processId
			AND actor.initiator = TRUE
		)
		AND user.enabled = TRUE
		AND (actormember.userId = user.id 
			OR user.id IN (
				SELECT um.userId 
				FROM org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
				WHERE (actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
				OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
				OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId)
			)
		)
	</query>

	<query name="searchSUserWhoCanStartProcess">
		SELECT DISTINCT user
		FROM org.bonitasoft.engine.identity.model.impl.SUserImpl AS user,
			 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
		WHERE actormember.actorId  IN (
			SELECT actor.id
			FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
				 org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition
			WHERE process_definition.activationState = 'ENABLED'
			AND process_definition.processId = :processId
			AND actor.scopeId = process_definition.processId
			AND actor.initiator = TRUE
		)
		AND user.enabled = TRUE
		AND (actormember.userId = user.id 
			OR user.id IN (
				SELECT um.userId 
				FROM org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
				WHERE (actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
				OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
				OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId)
			)
		)
	</query>
	
	<query name="getNumberOfSProcessDefinitionDeployInfoWithAssignedOrPendingHumanTasksFor">
        SELECT COUNT(DISTINCT process_definition)
        FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
        	 org.bonitasoft.engine.core.process.instance.model.impl.SProcessInstanceImpl AS p,
        	 org.bonitasoft.engine.core.process.instance.model.impl.SHumanTaskInstanceImpl AS a
        WHERE process_definition.processId = p.processDefinitionId
        AND p.id = a.logicalGroup2
        AND a.stable = TRUE
		AND a.stateExecuting = FALSE
		AND a.terminal = FALSE
		AND ( 
			a.assigneeId = :userId
			OR ( 
				a.assigneeId = 0
				AND EXISTS (
					SELECT mapping.id
					FROM org.bonitasoft.engine.core.process.instance.model.impl.SPendingActivityMappingImpl AS mapping
					WHERE mapping.activityId = a.id
					AND ( 
						mapping.userId = :userId
						OR EXISTS (
							SELECT actor.id
							FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
								 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
							WHERE mapping.actorId = actor.id
							AND  actor.id = actormember.actorId
							AND ( 
								actormember.userId = :userId
		 	  					OR EXISTS (
									SELECT um.id
									FROM org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
									WHERE um.userId = :userId
									AND (
										(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
										OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
										OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId)
									)
								)
		     				)
						)
					)
				)
			)
		)
    </query>
	
	<query name="searchSProcessDefinitionDeployInfoWithAssignedOrPendingHumanTasksFor">
        SELECT DISTINCT(process_definition)
        FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
        	 org.bonitasoft.engine.core.process.instance.model.impl.SProcessInstanceImpl AS p,
        	 org.bonitasoft.engine.core.process.instance.model.impl.SHumanTaskInstanceImpl AS a
        WHERE process_definition.processId = p.processDefinitionId
        AND p.id = a.logicalGroup2
        AND a.stable = TRUE
		AND a.stateExecuting = FALSE
		AND a.terminal = FALSE
		AND ( 
			a.assigneeId = :userId
			OR ( 
				a.assigneeId = 0
				AND EXISTS (
					SELECT mapping.id
					FROM org.bonitasoft.engine.core.process.instance.model.impl.SPendingActivityMappingImpl AS mapping
					WHERE mapping.activityId = a.id
					AND ( 
						mapping.userId = :userId
						OR EXISTS (
							SELECT actor.id
							FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
								 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
							WHERE mapping.actorId = actor.id
							AND  actor.id = actormember.actorId
							AND ( 
								actormember.userId = :userId
		 	  					OR EXISTS (
									SELECT um.id
									FROM org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
									WHERE um.userId = :userId
									AND (
										(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
										OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
										OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId)
									)
								)
		     				)
						)
					)
				)
			)
		)
    </query>

	<query name="getNumberOfSProcessDefinitionDeployInfoWithAssignedOrPendingHumanTasksSupervisedBy">
        SELECT COUNT(DISTINCT process_definition)
        FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
        	 org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor,
        	 org.bonitasoft.engine.core.process.instance.model.impl.SProcessInstanceImpl AS p,
        	 org.bonitasoft.engine.core.process.instance.model.impl.SHumanTaskInstanceImpl AS a,
        	 org.bonitasoft.engine.identity.model.impl.SUserImpl as user
        WHERE process_definition.processId = supervisor.processDefId
		AND (supervisor.userId = :userId
			OR EXISTS (
				SELECT supervisor.id
				FROM org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
				WHERE um.userId = :userId 
				AND (
					(supervisor.groupId = um.groupId AND supervisor.roleId &lt;= 0)
					OR (supervisor.roleId = um.roleId AND supervisor.groupId &lt;= 0)
					OR (supervisor.groupId = um.groupId AND supervisor.roleId = um.roleId)
				)
			)
		)
        AND process_definition.processId = p.processDefinitionId
        AND p.id = a.logicalGroup2
        AND a.stable = TRUE
		AND a.stateExecuting = FALSE
		AND a.terminal = FALSE
		AND ( 
			a.assigneeId = user.id
			OR ( 
				a.assigneeId = 0
				AND EXISTS (
					SELECT mapping.id
					FROM org.bonitasoft.engine.core.process.instance.model.impl.SPendingActivityMappingImpl AS mapping
					WHERE mapping.activityId = a.id
					AND ( 
						mapping.userId = user.id
						OR EXISTS (
							SELECT actor.id
							FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
								 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
							WHERE mapping.actorId = actor.id
							AND  actor.id = actormember.actorId
							AND ( 
								actormember.userId = user.id
			 	  				OR EXISTS (
									SELECT um.id
									FROM org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
									WHERE um.userId = user.id
									AND (
										(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
										OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
										OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId)
									)
								)
			     			)
						)
					)
				)
			)
		)
    </query>
	
	<query name="searchSProcessDefinitionDeployInfoWithAssignedOrPendingHumanTasksSupervisedBy">
        SELECT DISTINCT(process_definition)
        FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
        	 org.bonitasoft.engine.supervisor.mapping.model.impl.SProcessSupervisorImpl AS supervisor,
        	 org.bonitasoft.engine.core.process.instance.model.impl.SProcessInstanceImpl AS p,
        	 org.bonitasoft.engine.core.process.instance.model.impl.SHumanTaskInstanceImpl AS a,
        	 org.bonitasoft.engine.identity.model.impl.SUserImpl as user
        WHERE process_definition.processId = supervisor.processDefId
		AND (supervisor.userId = :userId
			OR EXISTS (
				SELECT supervisor.id
				FROM org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
				WHERE um.userId = :userId 
				AND (
					(supervisor.groupId = um.groupId AND supervisor.roleId &lt;= 0)
					OR (supervisor.roleId = um.roleId AND supervisor.groupId &lt;= 0)
					OR (supervisor.groupId = um.groupId AND supervisor.roleId = um.roleId)
				)
			)
		)
        AND process_definition.processId = p.processDefinitionId
        AND p.id = a.logicalGroup2
        AND a.stable = TRUE
		AND a.stateExecuting = FALSE
		AND a.terminal = FALSE
		AND ( 
			a.assigneeId = user.id
			OR ( 
				a.assigneeId = 0
				AND EXISTS (
					SELECT mapping.id
					FROM org.bonitasoft.engine.core.process.instance.model.impl.SPendingActivityMappingImpl AS mapping
					WHERE mapping.activityId = a.id
					AND ( 
						mapping.userId = user.id
						OR EXISTS (
							SELECT actor.id
							FROM org.bonitasoft.engine.actor.mapping.model.impl.SActorImpl AS actor,
								 org.bonitasoft.engine.actor.mapping.model.impl.SActorMemberImpl AS actormember
							WHERE mapping.actorId = actor.id
							AND  actor.id = actormember.actorId
							AND ( 
								actormember.userId = user.id
			 	  				OR EXISTS (
									SELECT um.id
									FROM org.bonitasoft.engine.identity.model.impl.SUserMembershipImpl as um
									WHERE um.userId = user.id
									AND (
										(actormember.groupId = um.groupId AND actormember.roleId &lt;= 0)
										OR (actormember.roleId = um.roleId AND actormember.groupId &lt;= 0)
										OR (actormember.groupId = um.groupId AND actormember.roleId = um.roleId)
									)
								)
			     			)
						)
					)
				)
			)
		)
    </query>
 
 	<query name="getNumberOfSProcessDefinitionDeployInfoWithAssignedOrPendingHumanTasks">
        SELECT COUNT(DISTINCT process_definition)
        FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
        	 org.bonitasoft.engine.core.process.instance.model.impl.SHumanTaskInstanceImpl AS a
		WHERE process_definition.processId = a.logicalGroup1
        AND a.stable = TRUE
		AND a.stateExecuting = FALSE
		AND a.terminal = FALSE
		AND a.stateId = 4
    </query>
	
	<query name="searchSProcessDefinitionDeployInfoWithAssignedOrPendingHumanTasks">
        SELECT DISTINCT(process_definition)
        FROM org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl AS process_definition,
        	 org.bonitasoft.engine.core.process.instance.model.impl.SHumanTaskInstanceImpl AS a
        WHERE process_definition.processId = a.logicalGroup1
        AND a.stable = TRUE
		AND a.stateExecuting = FALSE
		AND a.terminal = FALSE
		AND a.stateId = 4
    </query>   
</hibernate-mapping>
