plugins { id 'bonita-docker-database' }

dependencies {
    compile project(':bpm:bonita-common')
    compile project(':services:bonita-business-data:bonita-business-data-generator')
    compile project(':services:bonita-classloader')
    compile project(':services:bonita-log-technical')
    compile project(':services:bonita-business-data:bonita-business-data-api')
    compile project(':services:bonita-resources')
    compile project(':services:bonita-transaction')
    compile project(':services:bonita-commons')
    compile(group: 'org.hibernate', name: 'hibernate-core', version: Deps.hibernateVersion) {
        exclude(module: 'jboss-transaction-api_1.2_spec')
    }
    compile(group: 'org.hibernate', name: 'hibernate-entitymanager', version: Deps.hibernateVersion) {
        exclude(module: 'jboss-transaction-api_1.2_spec')
    }
    compile "org.apache.commons:commons-lang3:${Deps.commonsLangVersion}"
    compile project(':services:bonita-classloader')
    testCompile "junit:junit:${Deps.junit4Version}"
    testCompile "org.assertj:assertj-core:${Deps.assertjVersion}"
    testCompile "net.javacrumbs.json-unit:json-unit-fluent:${Deps.jsonUnitVersion}"
    testCompile "org.mockito:mockito-core:${Deps.mockitoVersion}"
    testCompile "org.jboss.narayana.jta:narayana-jta:${Deps.naranayaVersion}"
    testCompile "org.apache.commons:commons-dbcp2:${Deps.commonsDbcp2Version}"
    testCompile "com.h2database:h2:${Deps.h2Version}"
    testCompile "mysql:mysql-connector-java:${Deps.mysqlVersion}"
    testCompile "org.postgresql:postgresql:${Deps.postgresqlVersion}"
    testCompile "com.microsoft.sqlserver:mssql-jdbc:${Deps.mssqlVersion}"
    testCompile "ch.qos.logback:logback-classic:${Deps.logbackVersion}"
    testCompile "org.springframework:spring-context:${Deps.springVersion}"
    testCompile "org.springframework:spring-test:${Deps.springVersion}"
    testCompile "org.springframework:spring-jdbc:${Deps.springVersion}"
    testCompile project(':bpm:bonita-util:bonita-common-util-test')
    compileOnly "javax.transaction:jta:${Deps.javaxJtaVersion}"
    testCompile "javax.transaction:jta:${Deps.javaxJtaVersion}"
    compileOnly "javax.xml.bind:jaxb-api:${Deps.jaxbVersion}"
    testCompile "javax.xml.bind:jaxb-api:${Deps.jaxbVersion}"
}

// run:
// ./gradlew mysqlDatabaseTest
// ./gradlew oracleDatabaseTest
// ./gradlew postgresDatabaseTest
// to run tests on specific docker DB:
databaseIntegrationTest { includes '**/*Test.class' }
