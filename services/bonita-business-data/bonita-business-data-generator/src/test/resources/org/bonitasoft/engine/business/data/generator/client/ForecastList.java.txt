import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OrderColumn;
import javax.persistence.Table;
import javax.persistence.Version;


/**
 * 
 */
@javax.persistence.Entity(name = "Forecast")
@Table(name = "FORECAST")
@NamedQueries({
    @NamedQuery(name = "Forecast.findByPersistenceId", query = "SELECT f\nFROM Forecast f\nWHERE f.persistenceId= :persistenceId\n"),
    @NamedQuery(name = "Forecast.find", query = "SELECT f\nFROM Forecast f\nORDER BY f.persistenceId"),
    @NamedQuery(name = "Forecast.countForFind", query = "SELECT COUNT(f)\nFROM Forecast f\n")
})
public class Forecast implements org.bonitasoft.engine.bdm.Entity
{

    @Id
    @GeneratedValue
    private Long persistenceId;
    @Version
    private Long persistenceVersion;
    @ElementCollection(fetch = FetchType.EAGER)
    @OrderColumn
    @Column(name = "TEMPERATURES", nullable = true)
    private List<Double> temperatures = new ArrayList<Double>(10);

    public Forecast() {
    }

    public void setPersistenceId(Long persistenceId) {
        this.persistenceId = persistenceId;
    }

    public Long getPersistenceId() {
        return persistenceId;
    }

    public void setPersistenceVersion(Long persistenceVersion) {
        this.persistenceVersion = persistenceVersion;
    }

    public Long getPersistenceVersion() {
        return persistenceVersion;
    }

    public void setTemperatures(List<Double> temperatures) {
        if (this.temperatures == null) {
            this.temperatures = temperatures;
        } else {
            List<Double> copy = new ArrayList(temperatures);
            this.temperatures.clear();
            this.temperatures.addAll(copy);
        }
    }

    public List<Double> getTemperatures() {
        return temperatures;
    }

    public void addToTemperatures(Double addTo) {
        List temperatures = getTemperatures();
        temperatures.add(addTo);
    }

    public void removeFromTemperatures(Double removeFrom) {
        List temperatures = getTemperatures();
        temperatures.remove(removeFrom);
    }

}
