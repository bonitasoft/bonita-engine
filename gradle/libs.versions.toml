[versions]
# The groovy version must be in synch with the bonita-project-parent POM (bonita-project repository):
groovyVersion = "3.0.22"
springVersion = "5.3.37"
springSessionVersion = "2.7.4"
springBootVersion = "2.7.18"
commonsLangVersion = "3.14.0"
junit5Version = "5.10.3"
bonitaArtifactsModelVersion = "1.1.1"
commonsIOVersion = "2.16.1"
commonsFileUploadVersion = "1.5"
commonsBeanutilsVersion = "1.9.4"
commonsCollectionsVersion = "4.4"
tomcatVersion = "9.0.91"
commonsCLIVersion = "1.8.0"
semver4jVersion = '3.1.0'
slf4jVersion = "1.7.36"
# Attention, see PassingPropertiesJCacheRegionFactory javadoc if this version changes:
hibernateVersion = "5.4.33"
# version used by hibernate 5.4.33 (MUST BE REMOVED WHEN HIBERNATE IS UPGRADED to 5.6+):
javassistVersion = "3.27.0-GA"
# javax.persistence-api is used by hibernate:
javaxPersistenceApiVersion = "2.2"
jacksonBomVersion = "2.17.2"
jakartaTransactionVersion = "1.3.3"
jakartaServletVersion = "4.0.4"
# Keep this until all client projects have migrated to jakarta or it will break their builds !
javaxServletVersion = "4.0.1"
httpComponentsVersion = "4.5.14"
xstreamVersion = "1.4.20"
ehCacheVersion = "2.10.10.12.7"
eclipseCompilerVersion = "3.38.0"
jakartaActivationVersion = "1.2.2"
quartzVersion = "2.3.2"
micrometerVersion = "1.13.2"
# DB drivers:
mysqlVersion = "8.4.0"
msSqlServerVersion = "9.4.1.jre11"
oracleVersion = "19.23.0.0"
postgresqlVersion = "42.7.3"

narayanaVersion = "5.10.6.Final"
logbackVersion = "1.2.13"
jaxbVersion = "2.3.9"
javaxAnnotationsVersion = "1.3.2"
hazelcastVersion = "5.4.0" # Also update http://www.hazelcast.com/schema/config/hazelcast-config-<VERSION>.xsd if needed
jcacheVersion = "1.1.1"
guavaVersion = "33.2.1-jre"
antlr4RuntimeVersion = "4.7.2"

[libraries]
springCore = { module = "org.springframework:spring-core", version.ref = "springVersion" }
springBeans = { module = "org.springframework:spring-beans", version.ref = "springVersion" }
springContext = { module = "org.springframework:spring-context", version.ref = "springVersion" }
springTx = { module = "org.springframework:spring-tx", version.ref = "springVersion" }
springJdbc = { module = "org.springframework:spring-jdbc", version.ref = "springVersion" }
springWebMvc = { module = "org.springframework:spring-webmvc", version.ref = "springVersion" }
springWeb = { module = "org.springframework:spring-web", version.ref = "springVersion" }
springSessionCore = { module = "org.springframework.session:spring-session-core", version.ref = "springSessionVersion" }
springSessionHazelcast = { module = "org.springframework.session:spring-session-hazelcast", version.ref = "springSessionVersion" }

springBootAutoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "springBootVersion" }
springBootConfigurationProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "springBootVersion" }
springBootTest = { module = "org.springframework.boot:spring-boot-test", version.ref = "springBootVersion" }
springBootStarter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "springBootVersion" }
springBootStarterJdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc", version.ref = "springBootVersion" }
springBootStarterTest = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBootVersion" }

groovyBom = { module = "org.codehaus.groovy:groovy-bom", version.ref = "groovyVersion" }
groovyCore = { module = "org.codehaus.groovy:groovy", version.ref = "groovyVersion" }
groovyServlet = { module = "org.codehaus.groovy:groovy-servlet", version.ref = "groovyVersion" }
groovyXml = { module = "org.codehaus.groovy:groovy-xml", version.ref = "groovyVersion" }
groovyJson = { module = "org.codehaus.groovy:groovy-json", version.ref = "groovyVersion" }
groovyJmx = { module = "org.codehaus.groovy:groovy-jmx", version.ref = "groovyVersion" }
groovyNio = { module = "org.codehaus.groovy:groovy-nio", version.ref = "groovyVersion" }
groovyGroovysh = { module = "org.codehaus.groovy:groovy-groovysh", version.ref = "groovyVersion" }
groovyDatetime = { module = "org.codehaus.groovy:groovy-datetime", version.ref = "groovyVersion" }
groovyDateutil = { module = "org.codehaus.groovy:groovy-dateutil", version.ref = "groovyVersion" }
groovyDocgenerator = { module = "org.codehaus.groovy:groovy-docgenerator", version.ref = "groovyVersion" }
groovyJsr223 = { module = "org.codehaus.groovy:groovy-jsr223", version.ref = "groovyVersion" }
groovySql = { module = "org.codehaus.groovy:groovy-sql", version.ref = "groovyVersion" }
groovyTemplates = { module = "org.codehaus.groovy:groovy-templates", version.ref = "groovyVersion" }
groovyYaml = { module = "org.codehaus.groovy:groovy-yaml", version.ref = "groovyVersion" }


bonitaArtifactsModelBom = { module = "org.bonitasoft.engine:bonita-artifacts-model-dependencies", version.ref = "bonitaArtifactsModelVersion" }

bonitaCommonArtifactsModel = { module = "org.bonitasoft.engine:bonita-common-artifacts-model", version.ref = "bonitaArtifactsModelVersion" }
bonitaBusinessArchiveModel = { module = "org.bonitasoft.engine:bonita-business-archive", version.ref = "bonitaArtifactsModelVersion" }
bonitaProcessDefinitionModel = { module = "org.bonitasoft.engine:bonita-process-definition-model", version.ref = "bonitaArtifactsModelVersion" }
bonitaFormMappingModel = { module = "org.bonitasoft.engine:bonita-form-mapping-model", version.ref = "bonitaArtifactsModelVersion" }
bonitaBusinessObjectModel = { module = "org.bonitasoft.engine:bonita-business-object-model", version.ref = "bonitaArtifactsModelVersion" }
bonitaBdmAccessControlModel = { module = "org.bonitasoft.engine:bonita-bdm-access-control-model", version.ref = "bonitaArtifactsModelVersion" }
bonitaProfileModel = { module = "org.bonitasoft.engine:bonita-profile-model", version.ref = "bonitaArtifactsModelVersion" }
bonitaOrganizationModel = { module = "org.bonitasoft.engine:bonita-organization-model", version.ref = "bonitaArtifactsModelVersion" }
bonitaApplicationModel = { module = "org.bonitasoft.engine:bonita-application-model", version.ref = "bonitaArtifactsModelVersion" }
bonitaConnectorModel = { module = "org.bonitasoft.engine:bonita-connector-model", version.ref = "bonitaArtifactsModelVersion" }

guava = { group = "com.google.guava", name = "guava", version.ref = "guavaVersion" }
antlr4Runtime = { group = "org.antlr", name = "antlr4-runtime", version.ref = "antlr4RuntimeVersion" }
commonsLang = { group = "org.apache.commons", name = "commons-lang3", version.ref = "commonsLangVersion" }
commonsIO = { group = "commons-io", name = "commons-io", version.ref = "commonsIOVersion" }
commonsFileUpload = { group = "commons-fileupload", name = "commons-fileupload", version.ref = "commonsFileUploadVersion" }
commonsBeanUtils = { group = "commons-beanutils", name = "commons-beanutils", version.ref = "commonsBeanutilsVersion" }
commonsCollections = { group = "org.apache.commons", name = "commons-collections4", version.ref = "commonsCollectionsVersion" }
tomcatDbcp = { group = "org.apache.tomcat", name = "tomcat-dbcp", version.ref = "tomcatVersion" }
commonsCLI = { group = "commons-cli", name = "commons-cli", version.ref = "commonsCLIVersion" }
semver4j = { group = "com.vdurmont", name = "semver4j", version.ref = "semver4jVersion" }
slf4jApi = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4jVersion" }

hibernateCore = { group = "org.hibernate", name = "hibernate-core", version.ref = "hibernateVersion" }
javaxPersistenceApi = { group = "javax.persistence", name = "javax.persistence-api", version.ref = "javaxPersistenceApiVersion" }
hibernateJCache = { group = "org.hibernate", name = "hibernate-jcache", version.ref = "hibernateVersion" }
jcache = { group = "javax.cache", name = "cache-api", version.ref = "jcacheVersion" }
javassist = { group = "org.javassist", name = "javassist", version.ref = "javassistVersion" }

jacksonBom = { group = "com.fasterxml.jackson", name = "jackson-bom", version.ref = "jacksonBomVersion" }

jakartaTransactionApi = { group = "jakarta.transaction", name = "jakarta.transaction-api", version.ref = "jakartaTransactionVersion" }
jakartaServletApi = { group = "jakarta.servlet", name = "jakarta.servlet-api", version.ref = "jakartaServletVersion" }
javaxServletApi = { group = "javax.servlet", name = "javax.servlet-api", version.ref = "javaxServletVersion" }

httpComponentsClient = { group = "org.apache.httpcomponents", name = "httpclient", version.ref = "httpComponentsVersion" }
httpComponentsMime = { group = "org.apache.httpcomponents", name = "httpmime", version.ref = "httpComponentsVersion" }

xstream = { group = "com.thoughtworks.xstream", name = "xstream", version.ref = "xstreamVersion" }
ehCache = { group = "net.sf.ehcache", name = "ehcache", version.ref = "ehCacheVersion" }
eclipseCompiler = { group = "org.eclipse.jdt", name = "ecj", version.ref = "eclipseCompilerVersion" }
jakartaActivation = { group = "com.sun.activation", name = "jakarta.activation", version.ref = "jakartaActivationVersion" }
javaxAnnotations = { group = "javax.annotation", name = "javax.annotation-api", version.ref = "javaxAnnotationsVersion" }

hazelcast = { group = "com.hazelcast", name = "hazelcast", version.ref = "hazelcastVersion" }
hazelcastSpring = { group = "com.hazelcast", name = "hazelcast-spring", version.ref = "hazelcastVersion" }

quartz = { group = "org.quartz-scheduler", name = "quartz", version.ref = "quartzVersion" }
micrometerCore = { group = "io.micrometer", name = "micrometer-core", version.ref = "micrometerVersion" }
micrometerRegistryJmx = { group = "io.micrometer", name = "micrometer-registry-jmx", version.ref = "micrometerVersion" }
micrometerRegistryPrometheus = { group = "io.micrometer", name = "micrometer-registry-prometheus", version.ref = "micrometerVersion" }

narayanaJta = { group = "org.jboss.narayana.jta", name = "narayana-jta", version.ref = "narayanaVersion" }
jaxbCodeModel = { group = "org.glassfish.jaxb", name = "codemodel", version.ref = "jaxbVersion" }

h2 = "com.h2database:h2:1.4.200"
mysql = { group = "com.mysql", name = "mysql-connector-j", version.ref = "mysqlVersion" }
msSqlServer = { group = "com.microsoft.sqlserver", name = "mssql-jdbc", version.ref = "msSqlServerVersion" }
oracle = { group = "com.oracle.database.jdbc", name = "ojdbc8", version.ref = "oracleVersion" }
postgresql = { group = "org.postgresql", name = "postgresql", version.ref = "postgresqlVersion" }

lombok = "org.projectlombok:lombok:1.18.34"

logback = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logbackVersion" }

junit5api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit5Version" }
junitJupiterEngine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit5Version" }
junitVintageEngine = { group = "org.junit.vintage", name = "junit-vintage-engine", version.ref = "junit5Version" }
junit4 = "junit:junit:4.13.2"
springTest = { module = "org.springframework:spring-test", version.ref = "springVersion" }


[bundles]
groovy = ["groovyCore", "groovyServlet", "groovyXml", "groovyJson", "groovyJmx", "groovyNio", "groovyGroovysh", "groovyDatetime",
    "groovyDateutil", "groovyDocgenerator", "groovyJsr223", "groovySql", "groovyTemplates", "groovyYaml"]

[plugins]
bonitaFormatting = { id = "com.bonitasoft.gradle.bonita-formatting", version = "0.1.63" }
dependencyUpdates = { id = "com.github.ben-manes.versions", version = "0.51.0" } # used by "List out-of-date dependencies" script
taskInfo = { id = "org.barfuin.gradle.taskinfo", version = "2.2.0" } # Adds a 'tiTree' task to display Gradle task-graph
